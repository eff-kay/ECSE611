[[{"public final class JsonMapper": {" writeMapAsString(Map<String, Object> map)": ["writeObjectAsString(map)"], " writeObjectAsString(Object object)": ["GSON.toJson(object)", "MAPPER.writeValueAsString(object)"]}}], [{"public final class GsonUtil": []}], [{"public class JSONBean": {" write(MBeanServer mBeanServer, ObjectName qry, String attribute, boolean description)": ["flush()"], " open(final PrintWriter writer)": [], " write(String key, String value)": [], " write(MBeanServer mBeanServer, ObjectName qry, String attribute, ...)": ["JSONBean.write(jsonWriter, mBeanServer, qry, attribute, description)"], " write(JsonWriter writer, MBeanServer mBeanServer, ObjectName qry, ...)": []}}, {"public class JSONBean": {" write(MBeanServer mBeanServer, ObjectName qry, String attribute, boolean description)": ["flush()"], " open(final PrintWriter writer)": [], " write(String key, String value)": [], " write(MBeanServer mBeanServer, ObjectName qry, String attribute, ...)": ["JSONBean.write(jsonWriter, mBeanServer, qry, attribute, description)"], " write(JsonWriter writer, MBeanServer mBeanServer, ObjectName qry, ...)": []}}, {"public class JSONBean": {" write(MBeanServer mBeanServer, ObjectName qry, String attribute, boolean description)": ["flush()"], " open(final PrintWriter writer)": [], " write(String key, String value)": [], " write(MBeanServer mBeanServer, ObjectName qry, String attribute, ...)": ["JSONBean.write(jsonWriter, mBeanServer, qry, attribute, description)"], " write(JsonWriter writer, MBeanServer mBeanServer, ObjectName qry, ...)": []}}, {"public class JSONBean": {" write(MBeanServer mBeanServer, ObjectName qry, String attribute, boolean description)": ["flush()"], " open(final PrintWriter writer)": [], " write(String key, String value)": [], " write(MBeanServer mBeanServer, ObjectName qry, String attribute, ...)": ["JSONBean.write(jsonWriter, mBeanServer, qry, attribute, description)"], " write(JsonWriter writer, MBeanServer mBeanServer, ObjectName qry, ...)": []}}], [{"public final class JSONMetricUtil": {" getMBeanAttributeInfo(ObjectName bean)": ["mbinfo.getAttributes()"], " getValueFromMBean(ObjectName bean, String attribute)": [], " dumpBeanToString(String qry)": ["sw.toString()"], " buildObjectName(String pattern)": [], " getRegistredMBeans(ObjectName name, MBeanServer mbs)": ["mbs.queryNames(name, null)"], " getLastGcDuration(ObjectName gcCollector)": [], " calcPercentage(long a, long b)": []}}], [{"public class RESTApiClusterManager": {" setConf(Configuration conf)": [], " start(ServiceType service, String hostname, int port)": [], " stop(ServiceType service, String hostname, int port)": [], " restart(ServiceType service, String hostname, int port)": [], " isRunning(ServiceType service, String hostname, int port)": [], " kill(ServiceType service, String hostname, int port)": [], " suspend(ServiceType service, String hostname, int port)": [], " resume(ServiceType service, String hostname, int port)": [], " performClusterManagerCommand(ServiceType role, String hostname, RoleCommand command)": [], " doRoleCommand(String serviceName, String roleName, RoleCommand roleCommand)": [], " getHealthSummary(String serviceName, String roleType, String hostId)": ["getRolePropertyValue(serviceName, roleType, hostId, \"healthSummary\")"], " getHostId(String hostname)": [], " getJsonNodeFromURIGet(URI uri)": [], " getRoleName(String serviceName, String roleType, String hostId)": ["getRolePropertyValue(serviceName, roleType, hostId, \"name\")"], " getRolePropertyValue(String serviceName, String roleType, String hostId, ...)": [], " getRoleState(String serviceName, String roleType, String hostId)": ["getRolePropertyValue(serviceName, roleType, hostId, \"roleState\")"], " getServiceName(Service service)": []}}], [{"public class BlockCacheUtil": {" toString(final CachedBlock cb, final long now)": []}}, {"public class BlockCacheUtil": {" toString(final CachedBlock cb, final long now)": [], " write(JsonWriter out, FastLongHistogram value)": [], " read(JsonReader in)": []}}, {"public class BlockCacheUtil": {" toString(final CachedBlock cb, final long now)": [], " write(JsonWriter out, FastLongHistogram value)": [], " read(JsonReader in)": []}}]]